/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        combo_left_parantheses {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <19 20>;
            require-prior-idle-ms = <150>;
            timeout-ms = <25>;
        };

        combo_right_parantheses {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <20 21>;
            require-prior-idle-ms = <150>;
            timeout-ms = <25>;
        };

        cb {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <7 8>;
            require-prior-idle-ms = <150>;
            timeout-ms = <25>;
        };

        ccb {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <9 8>;
            require-prior-idle-ms = <150>;
            timeout-ms = <25>;
        };

        cccb {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <31 32>;
            timeout-ms = <25>;
        };

        fdsfs {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <32 33>;
            timeout-ms = <25>;
        };

        terterte {
            bindings = <&kp COLON>;
            key-positions = <21 22>;
            timeout-ms = <25>;
        };

        fsdfsdfsdfdsf {
            bindings = <&kp EQUAL>;
            key-positions = <15 16>;
            timeout-ms = <25>;
        };

        dfsdfdsfs {
            bindings = <&mt AT HASH>;
            key-positions = <34 33>;
            timeout-ms = <25>;
            require-prior-idle-ms = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  ESC |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | TAB |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  [  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  ;  | RCTRL  |
            //                    | GUI | LWR | ENT |   | SPC | RSE  | ALT |

            bindings = <
&kp ESC    &kp Q  &kp W  &kp E  &kp R         &kp T             &kp Y      &kp U          &kp I      &kp O    &kp SINGLE_QUOTE  &mt EXCL QMARK
&kp TAB    &kp A  &kp S  &kp D  &kp F         &kp G             &kp H      &kp J          &kp K      &kp L    &kp P             &kp BACKSPACE
&kp LCTRL  &kp Z  &kp X  &kp C  &kp V         &kp B             &kp N      &kp M          &kp COMMA  &kp DOT  &kp UNDERSCORE    &kp ENTER
                         &to 1  &kp LEFT_ALT  &kp LEFT_SHIFT    &kp SPACE  &kp RIGHT_GUI  &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none          &none            &kp N7        &kp N8        &kp N9        &kp EXCL     &none      &none           &kp UP_ARROW    &none            &none  &none
&kp MINUS      &kp PLUS         &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp N0       &none      &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &none  &kp BACKSPACE
&kp KP_DIVIDE  &kp KP_MULTIPLY  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp EQUAL    &none      &none           &none           &none            &none  &kp ENTER
                                              &to 0         &trans        &none        &kp SPACE  &none           &none
            >;
        };

        uo {
            bindings = <
&kp ESC    &kp Q  &kp W  &kp E  &kp R         &kp T        &kp Y      &kp U  &kp I      &kp O    &kp P     &kp BSPC
&kp TAB    &kp A  &kp S  &kp D  &kp F         &kp G        &kp H      &kp J  &kp K      &kp L    &kp LBKT  &kp SQT
&kp LCTRL  &kp Z  &kp X  &kp C  &kp V         &kp B        &kp N      &kp M  &kp COMMA  &kp DOT  &kp SEMI  &to 0
                         &mo 0  &kp LEFT_ALT  &kp SPACE    &kp SPACE  &mo 1  &kp RALT
            >;
        };
    };
};
