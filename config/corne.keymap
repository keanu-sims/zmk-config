/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        bracket {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <19 20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  ESC |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | TAB |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  [  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  ;  | RCTRL  |
            //                    | GUI | LWR | ENT |   | SPC | RSE  | ALT |

            bindings = <
&kp ESC    &kp Q  &kp W  &kp E     &kp R  &kp T    &kp Y      &kp U  &kp I      &kp O    &kp P      &kp RIGHT_GUI
&kp TAB    &kp A  &kp S  &kp D     &kp F  &kp G    &kp H      &kp J  &kp K      &kp L    &kp ENTER  &kp BACKSPACE
&kp LCTRL  &kp Z  &kp X  &kp C     &kp V  &kp B    &kp N      &kp M  &kp COMMA  &kp DOT  &kp SLASH  &kp RIGHT_SHIFT
                         &kp LGUI  &mo 1  &to 2    &kp SPACE  &mo 2  &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB     &kp N1        &kp N2        &kp N3        &kp N4        &kp N5          &kp N6    &kp N7    &kp N8    &kp N9     &kp N0  &kp BSPC
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT  &trans  &trans
&kp LSHFT   &trans        &trans        &trans        &trans        &trans          &trans    &trans    &trans    &trans     &trans  &trans
                                        &kp LGUI      &trans        &kp SPACE       &kp RET   &trans    &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp BACKSPACE  &kp KP_MULTIPLY   &kp KP_DIVIDE    &kp AT     &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp PIPE       &kp TILDE  &kp ESCAPE
&kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp N0         &kp PLUS          &kp MINUS        &kp COLON  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp UNDER      &kp ENTER  &kp BACKSPACE
&kp N7        &kp N8        &kp N9        &kp PERIOD     &kp GREATER_THAN  &kp LESS_THAN    &kp HASH   &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp BACKSLASH  &trans     &kp RIGHT_SHIFT
                                          &kp EXCL       &kp EQUAL         &to 0            &kp SPACE  &kp SINGLE_QUOTE      &trans
            >;
        };

        uo {
            bindings = <
&kp ESC    &kp Q  &kp W  &kp E  &kp R         &kp T        &kp Y      &kp U  &kp I      &kp O    &kp P     &kp BSPC
&kp TAB    &kp A  &kp S  &kp D  &kp F         &kp G        &kp H      &kp J  &kp K      &kp L    &kp LBKT  &kp SQT
&kp LCTRL  &kp Z  &kp X  &kp C  &kp V         &kp B        &kp N      &kp M  &kp COMMA  &kp DOT  &kp SEMI  &to 0
                         &mo 1  &kp LEFT_ALT  &kp SPACE    &kp SPACE  &mo 2  &kp RALT
            >;
        };
    };
};
